import logging

import openai

from inference.schemas.constants import DEFAULT_OPEN_API_KEY

# Create a logger
logger = logging.getLogger(__name__)


class GPT3:
    def __init__(self, open_api_key: str = DEFAULT_OPEN_API_KEY):
        self.api_key = open_api_key  # Set default key in
        openai.api_key = open_api_key

    def generate(self, prompt: str, max_tokens: int = 256) -> str:
        """
        Generates a completion from the GPT-3 model
        :param prompt: The text used to prompt the model
        :param max_tokens: Maximum number of tokens in the completion
        :return: The completion generated by the GPT-3 model
        """
        try:
            response = openai.Completion.create(
                engine="davinci",  # Specify the GPT-3 engine to use
                prompt=prompt,
                max_tokens=max_tokens,
                temperature=0,
            )
            return response.choices[0].text
        except Exception as e:
            logger.error(f"An error occurred during GPT-3 completion: {e}")
            return None
