[tool.poetry]
name = "apollo"
version = "1.0.0"
description = "A python monorepo for AI code generation"
authors = ["Isma-Ilou Sadou <isma@openfn.org>"]
license = "LGPLv3"
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "3.11.*"
spacy = "^3.7.4"
en-core-web-sm = { path = "models/en_core_web_sm-3.7.1-py3-none-any.whl" }
openai = "^1.23.3"
transformers = "^4.40.1"
black = "^24.4.2"
python-dotenv = "^1.0.1"
anthropic = "0.35.0"
pymilvus = "^2.4.6"

# These dependencies should only be needed for fine tuning
# use poetry install --with ft
langchain-pinecone = "0.2.2"
langchain-community = "^0.3.15"
langchain-openai = "^0.3.1"
datasets = "^3.2.0"
httpx = "0.27.0"
nltk = "^3.9.1"
[tool.poetry.group.ft]
optional = true

[tool.poetry.group.ft.dependencies]
torch = "^2.3.0"

[tool.poetry.group.dev]
optional = false

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120

[tool.ruff]
select = [
    "E",   # pycodestyle
    "F",   # pyflakes
    "W",   # pycodestyle (warnings)
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "ANN", # flake8-annotations
    "B",   # flake8-bugbear
    "A",   # flake8-builtins
    "COM", # flake8-commas
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "EXE", # flake8-executable
    "PIE", # flake8-pie
    "T20", # flake8-print
    "PT",  # flake8-pytest
    "SIM", # flake8-simplify
    "ARG", # flake8-unused-arguments
    "PTH", # flake8--use-pathlib
    "ERA", # flake8-eradicate
    "RUF", # ruff specific rules
    "PL",  # pylint
]
ignore = [
    "ANN101", # Missing type annotation for self in method
    "ANN204", # Missing type annotation for special method
    "ANN003", # Missing type annotation for `**kwargs`
    "UP007",  # Use `X | Y` for type annotations instead of Union
    "E501",
]
line-length = 120
target-version = "py311"
